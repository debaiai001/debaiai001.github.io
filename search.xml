<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL学习笔记</title>
      <link href="2021/03/17/mysql-xue-xi-bi-ji/"/>
      <url>2021/03/17/mysql-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>本文使用的是MySQL，内容为学习<a href="https://www.w3school.com.cn/sql">SQL语句</a>期间遇到的问题和注意事项。<br><a href="https://www.runoob.com/mysql/mysql-tutorial.html">参考MySQL菜鸟教程</a></p><h2 id="MySQL-与-charlist-通配符"><a href="#MySQL-与-charlist-通配符" class="headerlink" title="MySQL 与 [charlist]% 通配符"></a>MySQL 与 [charlist]% 通配符</h2><ul><li><p>按照提示使用如下语句匹配不到结果</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">select</span> * from persons where city like <span class="token string">'[ALN]%'</span></code></pre></li><li><p>这种语法在MySQL中不适用，必须以正则表达式代替，正确语句如下(regexp或者rlike关键字均可)</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">select</span> * from persons where city rlike <span class="token string">'^[ALN]%'</span><span class="token keyword">select</span> * from persons where city regexp <span class="token string">'^[ALN]%'</span></code></pre></li><li><p>如果需要区分大小写，使用binary关键字</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">select</span> * from persons where city rlike binary <span class="token string">'^[ALN]%'</span></code></pre></li><li><p>需要的是非A，非N，非L开头的数据，在关键字前加入 ^</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">select</span> * from persons where city rlike <span class="token string">'^[^ALN]%'</span></code></pre></li></ul><p>转载于:<a href="https://www.cnblogs.com/cherrysu/p/8023371.html">https://www.cnblogs.com/cherrysu/p/8023371.html</a></p><h2 id="MySQL-between-用法"><a href="#MySQL-between-用法" class="headerlink" title="MySQL between 用法"></a>MySQL between 用法</h2><pre class=" language-bash"><code class="language-bash">where column between value1 and value2where column not between value1 and value2</code></pre><ul><li><p>MySQL between 边界  </p><ul><li>在 MySQL 中，BETWEEN 包含了 value1 和 value2 边界值有的数据库则不包含 value1 和 value2 边界值（类似于 &gt; and &lt;），也有数据库包含 value1 而不包含 value2（类似于 &gt;= and &lt;）.  </li></ul></li><li><p>MySQL between 时间日期</p><ul><li><p>// DATE 格式，查询 2008-08-08 到 2009-01-01 零点之前的数据<br>SELECT * FROM table WHERE column_time BETWEEN ‘2008-08-08’ AND ‘2009-01-01’</p><p>// DATETIME 格式，查询 2008-08-08 20:00:00 到 2009-01-01 零点之前的数据<br>SELECT * FROM table WHERE column_time BETWEEN ‘2008-08-08 20:00:00’ AND ‘2008-12-31 23:59:59’  </p></li></ul></li><li><p>MySQL between 数据比较</p><pre class=" language-bash"><code class="language-bash"><span class="token function">expr</span> BETWEEN min AND max</code></pre></li><li><p>当 expr 表达式的值大于或等于 min 且小于或等于 max 时, BETWEEN 的返回值为 1 ，否则返回 0 。利用这个功能，可以判断一个表达式或值否则在某个区间  </p></li></ul><h2 id="MySQL-union-用法"><a href="#MySQL-union-用法" class="headerlink" title="MySQL union 用法"></a>MySQL union 用法</h2><ul><li>用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 select 语句会删除重复的数据。  <ul><li>MySQL UNION 操作符语法格式：  <pre class=" language-bash"><code class="language-bash"><span class="token keyword">select</span> expression1, expression2, <span class="token punctuation">..</span>. expression_nfrom tables<span class="token punctuation">[</span>where conditions<span class="token punctuation">]</span>union <span class="token punctuation">[</span>all<span class="token punctuation">]</span><span class="token keyword">select</span> expression1, expression2, <span class="token punctuation">..</span>. expression_nfrom tables<span class="token punctuation">[</span>where conditions<span class="token punctuation">]</span></code></pre></li><li>expression1, expression2, … expression_n: 要检索的列。<br>tables: 要检索的数据表。<br>where conditions: 可选， 检索条件。<br>all: 可选，返回所有结果集，包含重复数据。  </li></ul></li></ul><h2 id="MySQL-insert-into-select-语句"><a href="#MySQL-insert-into-select-语句" class="headerlink" title="MySQL insert into select 语句"></a>MySQL insert into select 语句</h2><ul><li>insert into select 语句从一个表复制数据，然后把数据插入到一个已存在的表中。目标表中任何已存在的行都不会受影响。  <ul><li>我们可以从一个表中复制所有的列插入到另一个已存在的表中(两个表结构一样)：  <pre class=" language-bash"><code class="language-bash">insert into table2 <span class="token keyword">select</span> * from table1</code></pre></li><li>或者我们可以只复制希望的列插入到另一个已存在的表中(两个表结构不一样)：  <pre class=" language-bash"><code class="language-bash">insert into table2<span class="token punctuation">(</span>column_name<span class="token punctuation">(</span>s<span class="token punctuation">))</span> <span class="token keyword">select</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span> from table1</code></pre></li></ul></li></ul><h2 id="MySQL-数据类型"><a href="#MySQL-数据类型" class="headerlink" title="MySQL 数据类型"></a>MySQL 数据类型</h2><p><a href="https://www.runoob.com/mysql/mysql-data-types.html">参考菜鸟驿站</a>  </p><h2 id="MySQL-unique-约束"><a href="#MySQL-unique-约束" class="headerlink" title="MySQL unique 约束"></a>MySQL unique 约束</h2><p>UNIQUE 约束唯一标识数据库表中的每条记录,每个表可以有多个 unique 约束，但是每个表只能有一个 primary key 约束。  </p><ul><li>创建约束:  <pre class=" language-bash"><code class="language-bash">create table Persons<span class="token punctuation">(</span>Id_P int not null,LastName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,unique <span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li>命名 unique 约束，以及为多个列定义 unique 约束:  <pre class=" language-bash"><code class="language-bash">create table Persons<span class="token punctuation">(</span>Id_P int not null,LastName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,constraint unique_name unique <span class="token punctuation">(</span>Id_P, LastName<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li>表已被创建时，在 “Id_P” 列创建 UNIQUE 约束:  <pre class=" language-bash"><code class="language-bash">alter table Persons add unique <span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span>alter table Persons add constraint unique_name unique <span class="token punctuation">(</span>Id_P,LastName<span class="token punctuation">)</span></code></pre></li><li>撤销 UNIQUE 约束：  <pre class=" language-bash"><code class="language-bash">alter table Persons drop index uc_PersonID</code></pre></li></ul><h2 id="MySQL-主键约束-primary-key"><a href="#MySQL-主键约束-primary-key" class="headerlink" title="MySQL 主键约束(primary key)"></a>MySQL 主键约束(primary key)</h2><ul><li>表设计时一定有主键，表中的某个字段添加主键约束后，该字段为主键字段，主键字段中出现的每一个数据都称为主键值，即使表中两行记录相关数据相同，但由于主键值不同，所以也认为是两行不同的记录。  </li><li>单一主键(列级定义)：  <pre class=" language-bash"><code class="language-bash">create table Persons<span class="token punctuation">(</span>Id_P int primary key,LastName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,<span class="token punctuation">)</span></code></pre></li><li>单一主键(表级定义)：  <pre class=" language-bash"><code class="language-bash">create table Persons<span class="token punctuation">(</span>Id_P int,LastName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,constraint pk_name primary key<span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li>复合主键(表级定义)  <pre class=" language-bash"><code class="language-bash">create table Persons<span class="token punctuation">(</span>Id_P int,LastName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,constraint pk_name primary key<span class="token punctuation">(</span>Id_P, LastName<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li>自动生成主键值,自增数从1开始，以1递增：  <pre class=" language-bash"><code class="language-bash">create table Persons<span class="token punctuation">(</span>Id_P int primary key auto_increment,LastName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,<span class="token punctuation">)</span></code></pre></li><li>表已存在的情况下为 “Id_P” 列创建 PRIMARY KEY 约束：  <pre class=" language-bash"><code class="language-bash">alter table Persons add primary key <span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span></code></pre></li><li>撤销 PRIMARY KEY 约束：  <pre class=" language-bash"><code class="language-bash">alter table Persons drop primary key</code></pre></li></ul><h2 id="MySQL-外键约束-foreign-key"><a href="#MySQL-外键约束-foreign-key" class="headerlink" title="MySQL 外键约束(foreign key)"></a>MySQL 外键约束(foreign key)</h2><ul><li>若有两个表A、B，id是A的主键，而B中也有id字段，则id就是表B的外键，外键约束主要用来维护两个表之间数据的一致性。某个字段添加外键约束之后，该字段称为外键字段，外键字段中每个数据都是外键值。  </li><li>一张表可以有多个外键字段（与主键不同）  </li><li>创建表时创建外键：  <pre class=" language-bash"><code class="language-bash">create table Orders<span class="token punctuation">(</span>Id_O int not null,OrderNo int not null,Id_P int,primary key <span class="token punctuation">(</span>Id_O<span class="token punctuation">)</span>,foreign key <span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span> references Persons<span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span><span class="token punctuation">)</span>  </code></pre></li><li>命名 foreign key 约束，以及为多个列定义 foreign key 约束  <pre class=" language-bash"><code class="language-bash">create table Orders<span class="token punctuation">(</span>Id_O int not null,OrderNo int not null,Id_P int,primary key <span class="token punctuation">(</span>Id_O<span class="token punctuation">)</span>,constraint fk_name foreign key <span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span> references Persons<span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span><span class="token punctuation">)</span>  </code></pre></li><li>在 “Orders” 表已存在的情况下为 “Id_P” 列创建 foreign key 约束：<pre class=" language-bash"><code class="language-bash">alter table Orders add foreign key <span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span> references Persons<span class="token punctuation">(</span>Id_P<span class="token punctuation">)</span></code></pre></li><li>撤销 foreign key 约束：  <pre class=" language-bash"><code class="language-bash">alter table Orders drop foreign key fk_name</code></pre></li></ul><h2 id="MySQL-check-约束"><a href="#MySQL-check-约束" class="headerlink" title="MySQL check 约束"></a>MySQL check 约束</h2><ul><li>未测试  </li></ul><h2 id="MySQL-default-约束"><a href="#MySQL-default-约束" class="headerlink" title="MySQL default 约束"></a>MySQL default 约束</h2><ul><li>在 “Persons” 表创建时为 “City” 列创建 DEFAULT 约束：  <pre class=" language-bash"><code class="language-bash">create table Persons<span class="token punctuation">(</span>Id_P int not null,LastName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> not null,FirstName varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span>,Address varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span>,City varchar<span class="token punctuation">(</span>255<span class="token punctuation">)</span> default <span class="token string">'Sandnes'</span><span class="token punctuation">)</span></code></pre></li><li>在表已存在的情况下为 “City” 列创建 default 约束：  <pre class=" language-bash"><code class="language-bash">alter table Persons alter column City <span class="token keyword">set</span> default <span class="token string">'Sandnes'</span></code></pre></li><li>撤销 DEFAULT 约束：  <pre class=" language-bash"><code class="language-bash">alter table Persons alter City drop default</code></pre></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda安装及使用问题</title>
      <link href="2021/01/16/anaconda-an-zhuang-ji-shi-yong-wen-ti/"/>
      <url>2021/01/16/anaconda-an-zhuang-ji-shi-yong-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>本文内容为在Anaconda安装及使用时遇到的问题，具体下载、安装、环境配置、换源和.condarc文件处理网上有方案，在此不多赘述。  </p><h2 id="换源后报错CondaHTTPError-HTTP-000-CONNECTION-FAILED解决方案"><a href="#换源后报错CondaHTTPError-HTTP-000-CONNECTION-FAILED解决方案" class="headerlink" title="换源后报错CondaHTTPError: HTTP 000 CONNECTION FAILED解决方案"></a>换源后报错CondaHTTPError: HTTP 000 CONNECTION FAILED解决方案</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><pre class=" language-bash"><code class="language-bash">Collecting package metadata <span class="token punctuation">(</span>current_repodata.json<span class="token punctuation">)</span>: failedCondaHTTPError: HTTP 000 CONNECTION FAILED <span class="token keyword">for</span> url <span class="token operator">&lt;</span>https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/linux-64/current_repodata.json<span class="token operator">></span>Elapsed: -An HTTP error occurred when trying to retrieve this URL.HTTP errors are often intermittent, and a simple retry will get you on your way.SSLError<span class="token punctuation">(</span>MaxRetryError<span class="token punctuation">(</span><span class="token string">'HTTPSConnectionPool(host=\'mirrors.tuna.tsinghua.edu.cn\', port=443): Max retries exceeded with url: /anaconda/pkgs/main/linux-64/current_repodata.json (Caused by SSLError(SSLError("bad handshake: Error([(\'SSL routines\', \'tls_process_server_certificate\', \'certificate verify failed\')])")))'</span><span class="token punctuation">))</span></code></pre><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>关闭conda的ssl验证即可，在Anaconda Prompt中输入命令  </p><pre class=" language-bash"><code class="language-bash">conda config --set ssl_verify <span class="token boolean">false</span></code></pre>  <h2 id="Conda-Downloaded-bytes-did-not-match-Content-Length问题解决方案"><a href="#Conda-Downloaded-bytes-did-not-match-Content-Length问题解决方案" class="headerlink" title="Conda-Downloaded bytes did not match Content-Length问题解决方案"></a>Conda-Downloaded bytes did not match Content-Length问题解决方案</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><pre class=" language-bash"><code class="language-bash">CondaError: Downloaded bytes did not match Content-Lengthurl: https://repo.anaconda.com/pkgs/main/linux-64/cudnn-7.0.5-cuda8.0_0.tar.bz2target_path: /home/yyf/miniconda3/pkgs/cudnn-7.0.5-cuda8.0_0.tar.bz2Content-Length: 261398285downloaded bytes: 47463195</code></pre><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><p>一共有三个方案，灵活使用<br><strong>1.</strong> 再次换源<br><strong>2.</strong> 调高conda下载的timeout，再进行尝试，时长不够可以设置大点.<br>在Anaconda Prompt中输入命令  </p><pre class=" language-bash"><code class="language-bash">conda config --set remote_read_timeout_secs 600.0</code></pre><p><strong>3.</strong> 从conda的源下载好要安装的包，直接采用本地安装的方式。  <a href="https://repo.anaconda.com/pkgs/main">下载地址</a><br>在Anaconda Prompt中输入命令  </p><pre class=" language-bash"><code class="language-bash">conda <span class="token function">install</span> --offline ./包名</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Blog</title>
      <link href="2021/01/15/my-first-blog/"/>
      <url>2021/01/15/my-first-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="网站搭建-amp-amp-first-blog"><a href="#网站搭建-amp-amp-first-blog" class="headerlink" title="网站搭建 &amp;&amp; first blog"></a>网站搭建 &amp;&amp; first blog</h1><h2 id="需要的软件"><a href="#需要的软件" class="headerlink" title="需要的软件"></a>需要的软件</h2><ul><li>Typora<br>个人建议在国内的网站上面下载，不要去官网，下载慢  </li><li>VS Code<br>轻量级文档编辑器  </li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><img src="/2021/01/15/my-first-blog/pitcure1.png" class="" title="This is an example image"><p><a href="test.jpg">Test</a></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://t.bilibili.com/480359746660354632?tab=2">图片来源</a></p><h2 id="hexo博客引用图片无法显示"><a href="#hexo博客引用图片无法显示" class="headerlink" title="hexo博客引用图片无法显示"></a>hexo博客引用图片无法显示</h2><ul><li>网上的解决方案有点问题  <ul><li>npm安装hexo-asset-image时报错<br>如果搜索给的方法都不起作用，请用cnpm替换npm尝试，或者去npm官网寻找方法</li><li>按照教程做完了图片依然不显示<br>替换掉博客目录下node_modules/hexo-ass-image/index.js  <blockquote><p>替换代码和解决方案来自<a href="https://kilig947.gitee.io/personal-blog/2020/05/26/newsolve/">点这里</a></p></blockquote></li></ul></li></ul><h2 id="hexo各种优化"><a href="#hexo各种优化" class="headerlink" title="hexo各种优化"></a>hexo各种优化</h2><ul><li>npm速度优化  </li><li>访问速度优化<ul><li>图片加载优化</li><li>代码压缩优化</li><li>全站CDN加速</li></ul></li><li>SEO优化<blockquote><p>解决方案<a href="https://blog.sky03.cn/posts/42790.html#toc-heading-4">点这里</a></p></blockquote></li></ul><ol><li>你好!  </li><li>Hello World!  </li><li>Test</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/24/hello-world/"/>
      <url>2020/10/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><pre class=" language-bash"><code class="language-bash">First blog.</code></pre><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
